<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bsp.dao.LendingRecordMapper">
    <resultMap id="BaseResultMap" type="com.bsp.entity.LendingRecord">
        <id column="lr_id" property="lrId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="agree_time" property="agreeTime" jdbcType="TIMESTAMP"/>
        <result column="send_to_time" property="sendToTime" jdbcType="TIMESTAMP"/>
        <result column="take_away_time" property="takeAwayTime" jdbcType="TIMESTAMP"/>
        <result column="expected_return_time" property="expectedReturnTime" jdbcType="TIMESTAMP"/>
        <result column="actual_return_time" property="actualReturnTime" jdbcType="TIMESTAMP"/>
        <result column="take_back_time" property="takeBackTime" jdbcType="TIMESTAMP"/>
        <result column="lr_struts" property="lrStruts" jdbcType="TINYINT"/>
        <result column="loan_phone" property="loanPhone" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="INTEGER"/>
        <association property="loanableBook" column="lb_id" javaType="LoanableBook"
                     select="com.bsp.dao.LoanableBookMapper.selectByPrimaryKey"/>
        <association property="user" column="uuid" javaType="User" select="com.bsp.dao.UserMapper.selectByPrimaryKey"/>
        <association property="receiveAdmin" column="receive_uuid" javaType="Administrator"
                     select="com.bsp.dao.AdministratorMapper.selectByPrimaryKey"/>
        <association property="backAdmin" column="back_uuid" javaType="Administrator"
                     select="com.bsp.dao.AdministratorMapper.selectByPrimaryKey"/>
    </resultMap>
    <sql id="Base_Column_List">
    lr_id, create_time, agree_time, send_to_time, take_away_time, expected_return_time, 
    actual_return_time, take_back_time, lr_struts, loan_phone, lb_id, uuid, receive_uuid, 
    back_uuid, amount
  </sql>
    <!-- 高级+分页查询的where语句块 -->
    <sql id="where_of_query">
        <where>
            <if test="search!=null">AND (
                lr_id LIKE CONCAT('%',#{search},'%')
                )
            </if>
            <if test="status!=null">
                <if test="status==0"><!-- 进行中的订单 -->
                    AND lr_struts in(0,4,6,7,8,9,10)
                </if>
                <if test="status==1"><!-- 异常的订单 -->
                    AND lr_struts in(7,9)
                </if>
                <if test="status==2"><!-- 已完结束的订单 -->
                    AND lr_struts in(1,2,3,5,11,12)
                </if>
            </if>
        </where>
    </sql>

    <!-- 获取可借阅图书不同lr_status转态下的数量  by ：邬俊标-->
    <select id="getNumByLrStatus" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select COUNT(*) from lending_record
    where lr_struts = #{lrStruts,jdbcType=INTEGER}
   </select>

    <select id="selectAllByLrStruts" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lending_record
        where lr_struts = 11 or lr_struts = 12
    </select>

    <select id="getTotalCount" resultType="java.lang.Integer" parameterType="com.bsp.dto.OrderQueryObject">
        select COUNT(*) from lending_record
        <include refid="where_of_query"/>
    </select>
    <select id="selectByQueryObject" resultMap="BaseResultMap" parameterType="com.bsp.dto.OrderQueryObject">
        select
        <include refid="Base_Column_List"/>
        from lending_record
        <include refid="where_of_query"/>
        <if test="sort!=null">
            ORDER BY ${sort}
            <if test="order!=null">${order}</if>
        </if>
        <if test="startIndex>-1">
            LIMIT #{startIndex},#{limit}
        </if>
    </select>
    <select id="selectBylrStrutsLendingRecord" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lending_record where lr_struts in(0,4,6,7,8,10)
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from lending_record
        where lr_id = #{lrId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lending_record
    where lr_id = #{lrId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.bsp.entity.LendingRecord">
    insert into lending_record (lr_id, create_time, agree_time, 
      send_to_time, take_away_time, expected_return_time, 
      actual_return_time, take_back_time, lr_struts, 
      loan_phone, lb_id, uuid, 
      receive_uuid, back_uuid, amount)
    values (#{lrId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{agreeTime,jdbcType=TIMESTAMP}, 
      #{sendToTime,jdbcType=TIMESTAMP}, #{takeAwayTime,jdbcType=TIMESTAMP}, #{expectedReturnTime,jdbcType=TIMESTAMP}, 
      #{actualReturnTime,jdbcType=TIMESTAMP}, #{takeBackTime,jdbcType=TIMESTAMP}, #{lrStruts,jdbcType=TINYINT}, 
      #{loanPhone,jdbcType=VARCHAR}, #{loanableBook.lbId,jdbcType=INTEGER}, #{user.uuid,jdbcType=VARCHAR}, 
      #{receiveAdmin.aUuid,jdbcType=VARCHAR}, #{backAdmin.aUuid,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.bsp.entity.LendingRecord">
        insert into lending_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lrId != null">
                lr_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="agreeTime != null">
                agree_time,
            </if>
            <if test="sendToTime != null">
                send_to_time,
            </if>
            <if test="takeAwayTime != null">
                take_away_time,
            </if>
            <if test="expectedReturnTime != null">
                expected_return_time,
            </if>
            <if test="actualReturnTime != null">
                actual_return_time,
            </if>
            <if test="takeBackTime != null">
                take_back_time,
            </if>
            <if test="lrStruts != null">
                lr_struts,
            </if>
            <if test="loanPhone != null">
                loan_phone,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="loanableBook.lbId != null">
                lb_id,
            </if>
            <if test="user.uuid != null">
                uuid,
            </if>
            <if test="receiveAdmin!= null">
                receive_uuid,
            </if>
            <if test="backAdmin != null">
                back_uuid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="lrId != null">
                #{lrId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="agreeTime != null">
                #{agreeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sendToTime != null">
                #{sendToTime,jdbcType=TIMESTAMP},
            </if>
            <if test="takeAwayTime != null">
                #{takeAwayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expectedReturnTime != null">
                #{expectedReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="actualReturnTime != null">
                #{actualReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="takeBackTime != null">
                #{takeBackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lrStruts != null">
                #{lrStruts,jdbcType=TINYINT},
            </if>
            <if test="loanPhone != null">
                #{loanPhone,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="loanableBook.lbId != null">
                #{loanableBook.lbId,jdbcType=INTEGER},
            </if>
            <if test="user.uuid != null">
                #{user.uuid,jdbcType=VARCHAR},
            </if>
            <if test="receiveAdmin!= null">
                #{receiveAdmin.aUuid,jdbcType=VARCHAR},
            </if>
            <if test="backAdmin != null">
                #{backAdmin.aUuid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bsp.entity.LendingRecord">
        update lending_record
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="agreeTime != null">
                agree_time = #{agreeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sendToTime != null">
                send_to_time = #{sendToTime,jdbcType=TIMESTAMP},
            </if>
            <if test="takeAwayTime != null">
                take_away_time = #{takeAwayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expectedReturnTime != null">
                expected_return_time = #{expectedReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="actualReturnTime != null">
                actual_return_time = #{actualReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="takeBackTime != null">
                take_back_time = #{takeBackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lrStruts != null">
                lr_struts = #{lrStruts,jdbcType=TINYINT},
            </if>
            <if test="loanPhone != null">
                loan_phone = #{loanPhone,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="loanableBook.lbId != null">
                lb_id = #{loanableBook.lbId,jdbcType=INTEGER},
            </if>
            <if test="user.uuid != null">
                uuid = #{user.uuid,jdbcType=VARCHAR},
            </if>
            <if test="receiveAdmin!= null">
                receive_uuid = #{receiveAdmin.aUuid,jdbcType=VARCHAR},
            </if>
            <if test="backAdmin != null">
                back_uuid = #{backAdmin.aUuid,jdbcType=VARCHAR},
            </if>
        </set>
        where lr_id = #{lrId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bsp.entity.LendingRecord">
    update lending_record
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      agree_time = #{agreeTime,jdbcType=TIMESTAMP},
      send_to_time = #{sendToTime,jdbcType=TIMESTAMP},
      take_away_time = #{takeAwayTime,jdbcType=TIMESTAMP},
      expected_return_time = #{expectedReturnTime,jdbcType=TIMESTAMP},
      actual_return_time = #{actualReturnTime,jdbcType=TIMESTAMP},
      take_back_time = #{takeBackTime,jdbcType=TIMESTAMP},
      lr_struts = #{lrStruts,jdbcType=TINYINT},
      loan_phone = #{loanPhone,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      lb_id = #{loanableBook.lbId,jdbcType=INTEGER},
      uuid = #{user.uuid,jdbcType=VARCHAR},
      receive_uuid = #{receiveAdmin.aUuid,jdbcType=VARCHAR},
      back_uuid = #{backAdmin.aUuid,jdbcType=VARCHAR}
    where lr_id = #{lrId,jdbcType=INTEGER}
  </update>
</mapper>